// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum role_types {
  super_admin
  user
}

model User {
  id           String     @id @default(uuid())
  first_name   String?
  last_name    String?
  email        String     @unique
  password     String?
  phone_number String?
  role_type    role_types
  created_at   DateTime   @default(now())
  updated_at   DateTime?
  deleted_at   DateTime?

  //relations 
  invitation Invitation[]
  payment    Payment[]
  templates  Templates[]
  Couple     Couple?
}

model Couple {
  id            Int       @id @default(autoincrement())
  couple_slug   String    @unique
  partner1_name String
  partner2_name String
  created_at    DateTime  @default(now())
  updated_at    DateTime?
  deleted_at    DateTime?

  //relations
  user    User   @relation(fields: [user_id], references: [id])
  user_id String @unique

  invitation Invitation[]

  // indexes
  @@index([user_id])
}

model Invitation {
  id                 Int       @id @default(autoincrement())
  event_date         DateTime?
  welcome_message    String?
  groom_parents      String?
  bride_parents      String?
  guest_message      String?
  special_request    String?
  dress_code         String?
  gift_registry_name String?
  gift_registry_link String?
  bible_verse        String?
  bible_reference    String?
  primary_color      String?
  secondary_color    String?
  created_at         DateTime  @default(now())
  updated_at         DateTime?

  // relations
  couple    Couple @relation(fields: [couple_id], references: [id])
  couple_id Int

  template    Templates @relation(fields: [template_id], references: [id])
  template_id Int

  created_by_user    User   @relation(fields: [created_by_user_id], references: [id])
  created_by_user_id String

  guest   Guest[]
  event   Event[]
  images  Images[]
  payment Payment[]

  // indexes
  @@index([couple_id, template_id, created_by_user_id])
}

model Guest {
  id               Int      @id @default(autoincrement())
  first_name       String?
  last_name        String?
  email            String?
  phone_number     String?
  invited_people   Int?
  confirmed_people Int?
  guest_slug       String   @unique
  created_at       DateTime @default(now())

  // relations
  invitation    Invitation @relation(fields: [invitation_id], references: [id])
  invitation_id Int

  // indexes
  @@index([invitation_id])
}

model Event {
  id             Int       @id @default(autoincrement())
  event_type     String?
  event_time     DateTime?
  event_location String?
  details        String?
  created_at     DateTime  @default(now())
  updated_at     DateTime?

  // relations
  invitation    Invitation @relation(fields: [invitation_id], references: [id])
  invitation_id Int

  // indexes
  @@index([invitation_id])
}

model Images {
  id           Int       @id @default(autoincrement())
  image_url    String?
  section_name String?
  created_at   DateTime  @default(now())
  updated_at   DateTime?

  // relations
  invitation    Invitation @relation(fields: [invitation_id], references: [id])
  invitation_id Int

  // indexes
  @@index([invitation_id])
}

model Payment {
  id             Int       @id @default(autoincrement())
  amount         Float?
  currency       String?
  payment_method String?
  payment_status String?
  transaction_id String?
  payment_date   DateTime?
  note           String?
  created_at     DateTime  @default(now())
  updated_at     DateTime?

  // relations
  invitation    Invitation @relation(fields: [invitation_id], references: [id])
  invitation_id Int

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  // indexes
  @@index([invitation_id, user_id])
}

model Templates {
  id                Int       @id @default(autoincrement())
  template_name     String?
  description       String?
  preview_image_url String?
  created_at        DateTime  @default(now())
  updated_at        DateTime?

  // relations
  created_by_user    User   @relation(fields: [created_by_user_id], references: [id])
  created_by_user_id String

  template_sections Template_sections[]
  invitation        Invitation[]

  // indexes
  @@index([created_by_user_id])
}

model Template_sections {
  id             Int       @id @default(autoincrement())
  section_name   String?
  requires_image Boolean?
  created_at     DateTime  @default(now())
  updated_at     DateTime?

  // relations
  template    Templates @relation(fields: [template_id], references: [id])
  template_id Int

  // indexes
  @@index([template_id])
}

// CREATE TYPE "role_types" AS ENUM (
//   'super_admin',
//   'admin',
//   'user'
// );

// CREATE TABLE "user" (
//   "id" uuid PRIMARY KEY NOT NULL,
//   "first_name" varchar(50),
//   "last_name" varchar(50),
//   "email" varchar(50) NOT NULL,
//   "password" varchar,
//   "phone_number" varchar(10),
//   "role_type" role_types NOT NULL,
//   "created_at" timestamp DEFAULT 'now()',
//   "updated_at" timestamp,
//   "deleted_at" timestamp
// );

// CREATE TABLE "couple" (
//   "id" SERIAL PRIMARY KEY,
//   "couple_slug" varchar(50) UNIQUE,
//   "partner1_name" varchar,
//   "partner2_name" varchar,
//   "user_id" uuid,
//   "created_at" timestamp DEFAULT 'now()',
//   "updated_at" timestamp,
//   "deleted_at" timestamp
// );

// CREATE TABLE "invitation" (
//   "id" SERIAL PRIMARY KEY,
//   "couple_id" numeric,
//   "template_id" numeric,
//   "created_by_user_id" uuid,
//   "event_date" timestamp,
//   "welcome_message" text,
//   "groom_parents" varchar(100),
//   "bride_parents" varchar(100),
//   "guest_message" text,
//   "special_request" text,
//   "dress_code" varchar(100),
//   "gift_registry_name" varchar(50),
//   "gift_registry_link" varchar(200),
//   "bible_verse" text,
//   "bible_reference" varchar(100),
//   "primary_color" varchar(7),
//   "secondary_color" varchar(7),
//   "created_at" timestamp DEFAULT 'now()',
//   "updated_at" timestamp
// );

// CREATE TABLE "guest" (
//   "id" SERIAL PRIMARY KEY,
//   "first_name" varchar(50),
//   "last_name" varchar(50),
//   "email" varchar(50),
//   "phone_number" varchar(10),
//   "invited_people" int,
//   "confirmed_people" int,
//   "guest_slug" varchar(50) UNIQUE,
//   "invitation_id" numeric
// );

// CREATE TABLE "event" (
//   "id" SERIAL PRIMARY KEY,
//   "invitation_id" numeric,
//   "event_type" varchar(50),
//   "event_time" time,
//   "event_location" varchar(100),
//   "details" text,
//   "created_at" timestamp DEFAULT 'now()',
//   "updated_at" timestamp
// );

// CREATE TABLE "images" (
//   "id" SERIAL PRIMARY KEY,
//   "image_url" varchar,
//   "section_name" varchar(50),
//   "invitation_id" numeric,
//   "created_at" timestamp DEFAULT 'now()',
//   "updated_at" timestamp
// );

// CREATE TABLE "payment" (
//   "id" SERIAL PRIMARY KEY,
//   "invitation_id" numeric,
//   "user_id" uuid,
//   "amount" decimal(10,2),
//   "currency" varchar(10),
//   "payment_method" varchar(50),
//   "payment_status" varchar(20),
//   "transaction_id" varchar(100),
//   "payment_date" timestamp,
//   "note" text,
//   "created_at" timestamp DEFAULT 'now()',
//   "updated_at" timestamp
// );

// CREATE TABLE "templates" (
//   "id" SERIAL PRIMARY KEY,
//   "template_name" varchar(100),
//   "description" text,
//   "preview_image_url" varchar(255),
//   "created_by_user_id" uuid,
//   "created_at" timestamp DEFAULT 'now()',
//   "updated_at" timestamp
// );

// CREATE TABLE "template_sections" (
//   "id" SERIAL PRIMARY KEY,
//   "template_id" numeric,
//   "section_name" varchar(50),
//   "requires_image" boolean,
//   "created_at" timestamp DEFAULT 'now()',
//   "updated_at" timestamp
// );

// CREATE INDEX ON "couple" ("user_id");

// CREATE INDEX ON "invitation" ("couple_id");

// CREATE INDEX ON "invitation" ("template_id");

// CREATE INDEX ON "invitation" ("created_by_user_id");

// CREATE INDEX ON "guest" ("invitation_id");

// CREATE INDEX ON "event" ("invitation_id");

// CREATE INDEX ON "images" ("invitation_id");

// CREATE INDEX ON "payment" ("invitation_id");

// CREATE INDEX ON "payment" ("user_id");

// CREATE INDEX ON "templates" ("created_by_user_id");

// CREATE INDEX ON "template_sections" ("template_id");

// ALTER TABLE "couple" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

// ALTER TABLE "invitation" ADD FOREIGN KEY ("couple_id") REFERENCES "couple" ("id");

// ALTER TABLE "invitation" ADD FOREIGN KEY ("template_id") REFERENCES "templates" ("id");

// ALTER TABLE "invitation" ADD FOREIGN KEY ("created_by_user_id") REFERENCES "user" ("id");

// ALTER TABLE "guest" ADD FOREIGN KEY ("invitation_id") REFERENCES "invitation" ("id");

// ALTER TABLE "event" ADD FOREIGN KEY ("invitation_id") REFERENCES "invitation" ("id");

// ALTER TABLE "images" ADD FOREIGN KEY ("invitation_id") REFERENCES "invitation" ("id");

// ALTER TABLE "payment" ADD FOREIGN KEY ("invitation_id") REFERENCES "invitation" ("id");

// ALTER TABLE "payment" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

// ALTER TABLE "templates" ADD FOREIGN KEY ("created_by_user_id") REFERENCES "user" ("id");

// ALTER TABLE "template_sections" ADD FOREIGN KEY ("template_id") REFERENCES "templates" ("id");
